warning: create a fresh variable is more explicit
  --> $DIR/main.rs:7:5
   |
LL |     x = 2;
   |     ^^^^^^ help: create a fresh variable instead of reinitialization: `let x = 2;`
   |
   = note: `#[warn(explicit_reinitialization)]` on by default

warning: create a fresh variable is more explicit
  --> $DIR/main.rs:14:5
   |
LL |     x = String::new();
   |     ^^^^^^^^^^^^^^^^^^ help: create a fresh variable instead of reinitialization: `let x = String::new();`

warning: create a fresh variable is more explicit
  --> $DIR/main.rs:21:5
   |
LL |     a = a * a * a;
   |     ^^^^^^^^^^^^^^ help: create a fresh variable instead of reinitialization: `let a = a * a * a;`

warning: create a fresh variable is more explicit
  --> $DIR/main.rs:28:5
   |
LL |     s = s.replacen('o', "a", 3);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: create a fresh variable instead of reinitialization: `let mut s = s.replacen('o', "a", 3);`

warning: create a fresh variable is more explicit
  --> $DIR/main.rs:40:9
   |
LL |         s = s.replacen(&mod_decl, "a", 3);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: create a fresh variable instead of reinitialization: `let mut s = s.replacen(&mod_decl, "a", 3);`

warning: create a fresh variable is more explicit
  --> $DIR/main.rs:94:9
   |
LL |         x = 2;
   |         ^^^^^^ help: create a fresh variable instead of reinitialization: `let x = 2;`

warning: 6 warnings emitted

